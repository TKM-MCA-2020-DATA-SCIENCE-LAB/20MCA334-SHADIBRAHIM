# -*- coding: utf-8 -*-
"""DecisionTree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Fz4_O6gy6drm11Oioqk2kI9loJGHUhcZ
"""

import pandas as pd
import numpy as np
from sklearn.datasets import load_iris

data=load_iris()

data.data.shape

print('Classes to Predict: ',data.target_names)
print('Features: ',data.feature_names)

x=data.data
y=data.target
display(x.shape,y.shape)

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier

x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=50,test_size=0.25)

classifier=DecisionTreeClassifier() #default criterion - gini
classifier.fit(x_train,y_train)

y_pred=classifier.predict(x_test)

from sklearn.metrics import accuracy_score
print('Accuracy on train data using Gini: ',accuracy_score(y_train,classifier.predict(x_train)))
print('Accuracy on test data using Gini: ',accuracy_score(y_test,y_pred))

classifier_entropy=DecisionTreeClassifier(criterion='entropy')
classifier_entropy.fit(x_train,y_train)
y_pred_entropy=classifier_entropy.predict(x_test)
from sklearn.metrics import accuracy_score
print('Accuracy on train data using Entropy: ',accuracy_score(y_train,classifier_entropy.predict(x_train)))
print('Accuracy on test data using Entropy: ',accuracy_score(y_test,y_pred_entropy))

classifier_entropy1=DecisionTreeClassifier(criterion='entropy',min_samples_split=50) #minimum no. of samples required to split an internal node
classifier_entropy1.fit(x_train,y_train)
y_pred_entropy1=classifier_entropy1.predict(x_test)
from sklearn.metrics import accuracy_score
print('Accuracy on train data using Entropy with min samples 50: ',accuracy_score(y_train,classifier_entropy1.predict(x_train)))
print('Accuracy on test data using Entropy with min samples 50: ',accuracy_score(y_test,y_pred_entropy1))

from sklearn.tree import export_graphviz #for visualization
from six import StringIO  #when stringIO object is created, it is initialised by passing string to constructor.If no string is passed stringIO will start empty

from IPython.display import Image #IPython is an interactive shell built with python
import pydotplus #python interface to Graphviz's Dot Language

dot_data=StringIO()

export_graphviz(classifier, out_file=dot_data, filled=True, rounded=True, special_characters=True, feature_names=data.feature_names,class_names=data.target_names)
graph=pydotplus.graph_from_dot_data(dot_data.getvalue())
Image(graph.create_png())

from sklearn.tree import export_graphviz
from six import StringIO

from IPython.display import Image
import pydotplus

dot_data=StringIO()

export_graphviz(classifier_entropy, out_file=dot_data, filled=True, rounded=True, special_characters=True, feature_names=data.feature_names,class_names=data.target_names)
graph1=pydotplus.graph_from_dot_data(dot_data.getvalue())
Image(graph1.create_png())